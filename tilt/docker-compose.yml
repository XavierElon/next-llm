services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: nextllm
    ports:
      - '5432:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    command: postgres -c 'max_connections=1000'

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - '6379:6379'

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.10.1
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ports:
      - '9200:9200'
    volumes:
      - esdata:/usr/share/elasticsearch/data

  memcached:
    image: memcached:latest
    container_name: memcached
    ports:
      - '11211:11211'

  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - '27017:27017'
    volumes:
      - mongodbdata:/data/db

  cassandra:
    image: cassandra:latest
    container_name: cassandra
    ports:
      - '9042:9042'
    volumes:
      - cassandradata:/var/lib/cassandra

  # zookeeper:
  #   image: zookeeper:3.8.2
  #   container_name: zookeeper
  #   ports:
  #     - '2181:2181'
  #   environment:
  #     ZOO_MY_ID: 1
  #     ZOO_SERVERS: server.1=zookeeper:2888:3888
  #     ZOO_4LW_COMMANDS_WHITELIST: mntr,conf,ruok
  #   volumes:
  #     - zookeeper_data:/data
  #     - zookeeper_datalog:/datalog
  #   networks:
  #     - kafka-network

#   kafka:
#     image: wurstmeister/kafka:latest
#     container_name: kafka
#     ports:
#       - '9092:9092'
#     environment:
#       KAFKA_BROKER_ID: 1
#       KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#       KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
#       KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
#       KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#       KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
#     volumes:
#       - /var/run/docker.sock:/var/run/docker.sock
#     depends_on:
#       - zookeeper
#     networks:
#       - kafka-network

# networks:
#   kafka-network:
#     driver: bridge

volumes:
  pgdata:
  esdata:
  mongodbdata:
  cassandradata:
  # zookeeper_data:
  # zookeeper_datalog:
